{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAeA,IAAMC,EAASC,SAASC,cAAc,SACtCF,EAAOG,iBAAiB,UAExB,SAAqBC,GACnBA,EAAMC,iBACN,IAAIC,EAASC,OAAOH,EAAMI,OAAOC,MAAMC,OACnCC,EAAUJ,OAAOH,EAAMI,OAAOI,OAAOF,OACrCG,EAAQN,OAAOH,EAAMI,OAAOM,KAAKJ,OACrC,GAAIJ,EAAS,GAAKK,EAAU,GAAKE,EAAQ,EACvC,OAAOE,EAAAjB,GAASkB,OAAOC,KAAK,2BAG9B,IADA,IAAMC,EAAc,GACXC,EAAY,EAAGA,GAAaR,EAASQ,GAAa,EACzDD,EAAYE,KAAK,CAAEC,SAAUF,EAAWV,MAAOH,IAC/CA,GAAUO,EAGZK,EAAYI,SAAQ,SAAAC,GA9BtB,IAAuBF,EAAUZ,GAAVY,EA+BLE,EAAKF,SA/BUZ,EA+BAc,EAAKd,MA9B7B,IAAIe,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfV,EAAS,QAAYU,OAANtB,EAAM,OAEpDiB,EAAK,sBAAuCK,OAAfV,EAAS,QAAYU,OAANtB,EAAM,SAErDA,OAuBAuB,MAAK,WACJjB,EAAAjB,GAASkB,OAAOiB,QACd,uBAA6CF,OAApBR,EAAKF,SAAS,QAAiBU,OAAXR,EAAKd,MAAM,MACtD,CACAyB,SAAS,EACTC,QAAS,SAIdC,OAAM,WACLrB,EAAAjB,GAASkB,OAAOqB,QACd,sBAA0CN,OAApBR,EAAKF,SAAS,QAAiBU,OAAXR,EAAKd,MAAM,MACrD,CACEyB,SAAS,EACTC,QAAS,SAIjBnC,EAAOsC,c","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormClick);\n\nfunction onFormClick(event) {\n  event.preventDefault();\n  let delayV = Number(event.target.delay.value);\n  let amountV = Number(event.target.amount.value);\n  let stepV = Number(event.target.step.value);\n  if (delayV < 0 || amountV < 0 || stepV < 0) {\n    return Notiflix.Notify.info('Dial the correct number');\n  }\n  const dataPromise = [];\n  for (let positionV = 1; positionV <= amountV; positionV += 1) {\n    dataPromise.push({ position: positionV, delay: delayV });\n    delayV += stepV;\n  }\n\n  dataPromise.forEach(item => {\n    createPromise(item.position, item.delay)\n      .then(() => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${item.position} in ${item.delay}ms`,\n          {\n            useIcon: false,\n            timeout: 5000,\n          }\n        );\n      })\n      .catch(() => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${item.position} in ${item.delay}ms`,\n          {\n            useIcon: false,\n            timeout: 5000,\n          }\n        );\n      });\n    formEl.reset();\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","addEventListener","event","preventDefault","delayV","Number","target","delay","value","amountV","amount","stepV","step","$parcel$interopDefault","Notify","info","dataPromise","positionV","push","position","forEach","item","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","then","success","useIcon","timeout","catch","failure","reset"],"version":3,"file":"03-promises.22d1c68b.js.map"}